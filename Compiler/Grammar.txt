NumberLiteral : int * int option
DoubleQuotedString : string
Identifier : string
Plus : unit
Minus : unit
Asterisk : unit
Slash : unit
ParenOpen : unit
ParenClose : unit
Let : unit
Equals : unit
Break : unit
BlockOpen : unit
BlockClose : unit
InvalidToken : string

Program -> Expression

Expression -> ExpressionConcatenation

ExpressionConcatenation.Concat -> ExpressionConcatenation Break BindingExpression
ExpressionConcatenation.Fallthrough -> BindingExpression

BindingExpression.Binding -> Let Identifier Equals ArithmeticSecondOrderExpression
BindingExpression.Fallthrough -> ArithmeticSecondOrderExpression

ArithmeticSecondOrderExpression.Add -> ArithmeticSecondOrderExpression Plus ArithmeticFirstOrderExpression
ArithmeticSecondOrderExpression.Subtract -> ArithmeticSecondOrderExpression Minus ArithmeticFirstOrderExpression
ArithmeticSecondOrderExpression.Fallthrough -> ArithmeticFirstOrderExpression

ArithmeticFirstOrderExpression.Multiply -> ArithmeticFirstOrderExpression Asterisk Application
ArithmeticFirstOrderExpression.Divide -> ArithmeticFirstOrderExpression Slash Application
ArithmeticFirstOrderExpression.Fallthrough -> Application

Application.Application -> Application TerminalEnclosedExpression
Application.Fallthrough -> TerminalEnclosedExpression

TerminalEnclosedExpression.Number -> NumberLiteral
TerminalEnclosedExpression.String -> DoubleQuotedString
TerminalEnclosedExpression.Identifier -> Identifier
TerminalEnclosedExpression.Paren -> ParenOpen Expression ParenClose
TerminalEnclosedExpression.Block -> BlockOpen Expression BlockClose
